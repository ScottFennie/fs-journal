(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{493:function(a,t,e){"use strict";e.r(t);var s=e(1),i=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"javascript-ain-t-easy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-ain-t-easy"}},[a._v("#")]),a._v(" Javascript AIN'T Easy")]),a._v(" "),e("h2",{attrs:{id:"what-is-scope"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-scope"}},[a._v("#")]),a._v(" What is Scope ?")]),a._v(" "),e("p",[a._v("Scope is basically how each variable is available. They can essentially be available locally or globally.")]),a._v(" "),e("h2",{attrs:{id:"what-is-hoisting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-hoisting"}},[a._v("#")]),a._v(" What is Hoisting ?")]),a._v(" "),e("p",[a._v("Hoisting is essentially moving the variable to the top of the scope within a line of code before the code is executed.")]),a._v(" "),e("h2",{attrs:{id:"in-what-cases-might-you-use-let-vs-const-vs-var"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#in-what-cases-might-you-use-let-vs-const-vs-var"}},[a._v("#")]),a._v(" In what cases might you use let vs const vs var?")]),a._v(" "),e("p",[a._v("you would use a const variable in a case where you do not want the variable to be changed in another block. Let variables are more lose and can basically be changed anywhere.")]),a._v(" "),e("p",[a._v("link: https://scottfennie.github.io/JS-Day1/")])])}),[],!1,null,null,null);t.default=i.exports}}]);